#!/bin/bash

# Manage requirements inside container

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'

REQUIREMENTS_DIR="/home/zozo/zobot_ws/.requirements"

update_requirements() {
    echo -e "${CYAN}🔄 Updating requirements inside container...${NC}"
    
    if [ ! -d "$REQUIREMENTS_DIR" ]; then
        echo -e "${RED}Requirements directory not found: $REQUIREMENTS_DIR${NC}"
        exit 1
    fi
    
    cd "$REQUIREMENTS_DIR" || exit 1
    
    # Update VCS repositories if depend.repos exists and has content
    if [ -f "depend.repos" ]; then
        echo -e "${YELLOW}Updating VCS repositories...${NC}"
        if [ -s "depend.repos" ] && [ "$(grep -c '^\s*[^#]' depend.repos)" -gt 1 ]; then
            echo -e "${CYAN}📦 Importing repositories from depend.repos...${NC}"
            cd /home/zozo/zobot_ws || exit 1
            
            # Use ros-mgr to import and build repositories
            if ros-mgr import; then
                echo -e "${GREEN}✅ VCS repositories imported successfully${NC}"
                
                # Build the imported repositories
                echo -e "${CYAN}🔨 Building imported repositories...${NC}"
                if ros-mgr build; then
                    echo -e "${GREEN}✅ Repositories built successfully${NC}"
                else
                    echo -e "${RED}❌ Failed to build some repositories${NC}"
                fi
            else
                echo -e "${RED}❌ Failed to import VCS repositories${NC}"
            fi
            
            cd "$REQUIREMENTS_DIR" || exit 1
        else
            echo -e "${YELLOW}ℹ️  depend.repos is empty or contains only comments${NC}"
        fi
    fi
    
    if [ -f "additional_ros_requirements.txt" ]; then
        echo -e "${YELLOW}Updating ROS requirements...${NC}"
        if grep -vE '^\s*#|^\s*$' additional_ros_requirements.txt | wc -l > 0; then
            sudo apt-get update
            grep -vE '^\s*#|^\s*$' additional_ros_requirements.txt | xargs sudo apt-get install -y
        fi
    fi
    
    if [ -f "additional_deb_requirements.txt" ]; then
        echo -e "${YELLOW}Updating deb requirements...${NC}"
        if grep -vE '^\s*#|^\s*$' additional_deb_requirements.txt | wc -l > 0; then
            sudo apt-get update
            grep -vE '^\s*#|^\s*$' additional_deb_requirements.txt | xargs sudo apt-get install -y
        fi
    fi
    
    if [ -f "additional_pip_requirements.txt" ]; then
        echo -e "${YELLOW}Updating pip requirements...${NC}"
        if grep -vE '^\s*#|^\s*$' additional_pip_requirements.txt | wc -l > 0; then
            pip install --upgrade pip
            pip install -r additional_pip_requirements.txt --upgrade --force-reinstall
        fi
    fi
    
    sudo apt-get autoremove -y
    sudo apt-get autoclean
    
    echo -e "${GREEN}Requirements updated successfully!${NC}"
}

show_help() {
    echo -e "${CYAN}Requirements Manager${NC}"
    echo ""
    echo -e "${GREEN}Usage:${NC}"
    echo "  req update    Update all requirements from requirements/ folder"
    echo "  req help      Show this help message"
    echo ""
    echo -e "${GREEN}Description:${NC}"
    echo "  This command updates package requirements inside the container"
    echo "  It processes files in: $REQUIREMENTS_DIR"
    echo "  - additional_ros_requirements.txt (apt packages)"
    echo "  - additional_deb_requirements.txt (apt packages)"
    echo "  - additional_pip_requirements.txt (pip packages)"
    echo "  - depend.repos (VCS repositories for overlay workspace)"
}

case "${1:-help}" in
    update)
        update_requirements
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo -e "${RED}Unknown command: $1${NC}"
        show_help
        exit 1
        ;;
esac
