#!/bin/bash

# VCS Repository Management Script

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'

WORKSPACE_DIR="/home/zozo/zobot_ws"
REQUIREMENTS_DIR="/home/zozo/zobot_ws/.requirements"
DEPEND_REPOS_FILE="$REQUIREMENTS_DIR/depend.repos"

vcs_import() {
    echo -e "${CYAN}Importing VCS repositories...${NC}"
    
    if [ ! -f "$DEPEND_REPOS_FILE" ]; then
        echo -e "${RED}depend.repos file not found: $DEPEND_REPOS_FILE${NC}"
        exit 1
    fi
    
    if [ ! -s "$DEPEND_REPOS_FILE" ] || [ "$(grep -c '^\s*[^#]' "$DEPEND_REPOS_FILE")" -le 1 ]; then
        echo -e "${YELLOW}â„¹depend.repos is empty or contains only comments${NC}"
        return 0
    fi
    
    cd "$WORKSPACE_DIR" || exit 1
    
    # Create .src directory if it doesn't exist
    mkdir -p .src
    
    # Import repositories
    if vcs import .src < "$DEPEND_REPOS_FILE"; then
        echo -e "${GREEN}VCS repositories imported successfully${NC}"
        return 0
    else
        echo -e "${RED}Failed to import VCS repositories${NC}"
        return 1
    fi
}

vcs_status() {
    echo -e "${CYAN}Checking VCS repository status...${NC}"
    
    cd "$WORKSPACE_DIR" || exit 1
    
    if [ ! -d ".src" ]; then
        echo -e "${YELLOW}No .src directory found${NC}"
        return 0
    fi
    
    vcs status .src
}

vcs_pull() {
    echo -e "${CYAN}â¬‡Pulling latest changes from VCS repositories...${NC}"
    
    cd "$WORKSPACE_DIR" || exit 1
    
    if [ ! -d ".src" ]; then
        echo -e "${YELLOW}No .src directory found${NC}"
        return 0
    fi
    
    vcs pull .src
}

vcs_build() {
    echo -e "${CYAN}ðŸ”¨ Building VCS repositories...${NC}"
    
    cd "$WORKSPACE_DIR" || exit 1
    
    if [ ! -d ".src" ]; then
        echo -e "${YELLOW}No .src directory found${NC}"
        return 0
    fi
    
    # Check if there are any buildable packages
    if [ "$(find .src -name "*.xml" -o -name "CMakeLists.txt" -o -name "setup.py" | wc -l)" -eq 0 ]; then
        echo -e "${YELLOW}No buildable packages found in .src directory${NC}"
        return 0
    fi
    
    # Source ROS setup and build
    if . /opt/ros/$ROS_DISTRO/setup.sh && colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release; then
        echo -e "${GREEN}Repositories built successfully${NC}"
        echo -e "${CYAN}Don't forget to source the setup file: source install/setup.bash${NC}"
    else
        echo -e "${RED}Failed to build some repositories${NC}"
        return 1
    fi
}

vcs_clean() {
    echo -e "${CYAN}Cleaning VCS repositories...${NC}"
    
    cd "$WORKSPACE_DIR" || exit 1
    
    if [ -d ".src" ]; then
        echo -e "${YELLOW}This will remove all VCS repositories in .src/. Continue? (y/N)${NC}"
        read -r response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            rm -rf .src/
            echo -e "${GREEN}VCS repositories cleaned${NC}"
        else
            echo -e "${CYAN}Operation cancelled${NC}"
        fi
    else
        echo -e "${YELLOW}No .src directory found${NC}"
    fi
    
    if [ -d "build" ]; then
        echo -e "${YELLOW}Also remove build directory? (y/N)${NC}"
        read -r response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            rm -rf build/
            echo -e "${GREEN}Build directory cleaned${NC}"
        fi
    fi
    
    if [ -d "install" ]; then
        echo -e "${YELLOW}Also remove install directory? (y/N)${NC}"
        read -r response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            rm -rf install/
            echo -e "${GREEN}Install directory cleaned${NC}"
        fi
    fi
}

show_help() {
    echo -e "${CYAN}VCS Repository Manager${NC}"
    echo ""
    echo -e "${GREEN}Usage:${NC}"
    echo "  vcs-mgr import     Import repositories from depend.repos"
    echo "  vcs-mgr status     Show status of VCS repositories"
    echo "  vcs-mgr pull       Pull latest changes from repositories"
    echo "  vcs-mgr build      Build imported repositories"
    echo "  vcs-mgr clean      Clean VCS repositories and build artifacts"
    echo "  vcs-mgr help       Show this help message"
    echo ""
    echo -e "${GREEN}Description:${NC}"
    echo "  This script manages VCS repositories defined in:"
    echo "  $DEPEND_REPOS_FILE"
    echo ""
    echo -e "${GREEN}Workflow:${NC}"
    echo "  1. Edit depend.repos with your repository definitions"
    echo "  2. Run 'vcs-mgr import' to clone repositories"
    echo "  3. Run 'vcs-mgr build' to build the imported packages"
    echo "  4. Source the setup file: 'source install/setup.bash'"
}

case "${1:-help}" in
    import)
        vcs_import
        ;;
    status)
        vcs_status
        ;;
    pull)
        vcs_pull
        ;;
    build)
        vcs_build
        ;;
    clean)
        vcs_clean
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo -e "${RED}Unknown command: $1${NC}"
        show_help
        exit 1
        ;;
esac
